// Generated by view binder compiler. Do not edit!
package com.example.kallz2u.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.kallz2u.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGroupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton imageButton80;

  @NonNull
  public final ImageButton imageButton88;

  @NonNull
  public final ImageView imageView64;

  @NonNull
  public final ImageView imageView66;

  private FragmentGroupBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton imageButton80, @NonNull ImageButton imageButton88,
      @NonNull ImageView imageView64, @NonNull ImageView imageView66) {
    this.rootView = rootView;
    this.imageButton80 = imageButton80;
    this.imageButton88 = imageButton88;
    this.imageView64 = imageView64;
    this.imageView66 = imageView66;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageButton80;
      ImageButton imageButton80 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton80 == null) {
        break missingId;
      }

      id = R.id.imageButton88;
      ImageButton imageButton88 = ViewBindings.findChildViewById(rootView, id);
      if (imageButton88 == null) {
        break missingId;
      }

      id = R.id.imageView64;
      ImageView imageView64 = ViewBindings.findChildViewById(rootView, id);
      if (imageView64 == null) {
        break missingId;
      }

      id = R.id.imageView66;
      ImageView imageView66 = ViewBindings.findChildViewById(rootView, id);
      if (imageView66 == null) {
        break missingId;
      }

      return new FragmentGroupBinding((ConstraintLayout) rootView, imageButton80, imageButton88,
          imageView64, imageView66);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
